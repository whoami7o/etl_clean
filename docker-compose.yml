version: "3.8"
services:

  postgres_db:
    build:
      context: ./docker/postgres_db
      dockerfile: Dockerfile
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - '5432:5432'
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  elasticsearch:
    build:
      context: ./docker/elastic
      dockerfile: Dockerfile
      args:
        DISCOVERY_TYPE: single-node
    ports:
      - '9200:9200'
    volumes:
      - elastic_data:/usr/share/elasticsearch/data

  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - redis_data
    ports:
      - '6379:6379'

  etl:
    restart: always
    build:
      context: .
      dockerfile: ./docker/etl/Dockerfile
    depends_on:
      postgres_db:
        condition: service_healthy
      elasticsearch:
        condition: service_started
      redis:
        condition: service_started
    env_file:
      - .env
    command: python main.py


volumes:
  postgres_data:
  elastic_data:
  redis_data:
